@page "/amostras/edit/{id:int}"
@using AppAmostras.Data
@using AppAmostras.Models
@using AppAmostras.Repositories
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext Db
@inject NavigationManager Navigation
@inject IAmostraRepository AmostraRepository
@rendermode InteractiveServer
@attribute [Authorize]


<Modal @ref="modal" Title="Modal title">
    <BodyTemplate>
        Já existe uma amostra com o código informado.
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModal">Fechar</Button>
    </FooterTemplate>
</Modal>

@if (amostra is null)
{
    <p class="text-center">
        <em>Amostra não encontrado</em>
    </p>
}
else
{
    <h4>Editar Registro</h4>
    <hr />
    <EditForm Model="@amostra" OnValidSubmit="OnValidSubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        
        <div class="mb-3">
            <label class="form-label">Código da Amostra:</label>
            <InputText id="descricao" @bind-Value="amostra.Codigo" class="form-control" aria-required="true" required />
        </div>
        <div class="mb-3">
            <label class="form-label">Descrição:</label>
            <InputText id="descricao" @bind-Value="amostra.Descricao" class="form-control" aria-required="true" required />           
        </div>
        <div class="mb-3">
            <label class="form-label">Data Recebimento:</label>
            <InputDate id="datarecebimento" @bind-Value="amostra.DataRecebimento" @bind-Value:format="dd-MM-yyyy" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">Status:</label>
            <InputSelect @bind-Value="amostra.StatusId" class="form-control" required>
                <option></option>
                @foreach (var status in listastatus)
                {
                    <option value="@status.Id">@status.Descricao</option>
                }
            </InputSelect>           
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Atualizar</button>
            <a href="@($"/amostras")" class="btn btn-light">Cancelar</a>
        </div>
        <input name="codigoatual" type="hidden" @bind-value="amostra.Id" />
    </EditForm>
    <hr />
}

@code {

    [Parameter]
    public int Id { get; set; }
    public Amostra amostra { get; set; } = new();
    public IEnumerable<Status> listastatus { get; set; } = Enumerable.Empty<Status>();
    private Modal modal;

    protected override async Task OnInitializedAsync()
    {
        amostra = await Db.Amostras.FirstOrDefaultAsync(f => f.Id == Id) ?? new();
        if (amostra is null)
        {
            Navigation.NavigateTo("notfound");
        }
        amostra.CodigoSalvo = amostra.Codigo;
        listastatus = await Db.Status.OrderBy(s => s.Descricao).ToListAsync();    
    }

    public async Task OnValidSubmitAsync()
    {
        bool amostraExiste = Db.Amostras.Any(a => a.Codigo.Equals(amostra.Codigo));

        if (amostraExiste && (amostra.Codigo != amostra.CodigoSalvo))
        {
            OnShowModal();
        }
        else
        {
            AmostraRepository.UpdateAsync(amostra);           
            Navigation.NavigateTo("amostras");
        }
    }

    private async Task OnShowModal()
    {
        await modal?.ShowAsync();
    }

    private async Task OnHideModal()
    {
        await modal?.HideAsync();
    }
}